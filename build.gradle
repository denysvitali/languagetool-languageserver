buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.2.0'
    }
}

group = 'denysvitali'
version = '1.0-SNAPSHOT'

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.junit.platform.gradle.plugin'

// Apply the application plugin to add support for building an application
apply plugin: 'application'

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    testCompile "org.junit.jupiter:junit-jupiter-api:5.5.1"

    // Enabling makes the Gradle plugin work but breaks IDEA
    testRuntime "org.junit.jupiter:junit-jupiter-engine:5.5.1"

    compile "org.languagetool:languagetool-core:4.6"
    compile 'org.languagetool:language-en:4.6'

    // This dependency is found on compile classpath of this component and consumers.
    compile "org.eclipse.lsp4j:org.eclipse.lsp4j:0.7.2"
    compile "com.vladsch.flexmark:flexmark-all:0.50.26"
}

mainClassName = "it.denv.languagetool.languageserver.App"

jar {
    manifest {
        attributes "Main-Class": "$mainClassName"
    }
}

task fatJar(type: Jar) {
    manifest.from jar.manifest
    classifier = 'all'
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
    with jar
}




// Define the main class for the application
mainClassName = 'App'

